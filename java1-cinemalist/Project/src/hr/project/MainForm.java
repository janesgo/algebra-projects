package hr.project;

import hr.algebra.utils.JAXBUtils;
import hr.algebra.utils.MessageUtils;
import hr.project.dal.Repository;
import hr.project.dal.RepositoryFactory;
import hr.project.model.Movie;
import hr.project.model.Movies;
import hr.project.model.Role;
import hr.project.model.User;
import hr.project.model.UserLoginable;
import hr.project.model.UserRegistrable;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.JAXBException;

/**
 *
 * @author Goran
 */
public class MainForm extends javax.swing.JFrame implements UserLoginable, UserRegistrable {

    private static final String MOVIES_TITLE = "Movies";
    private static final String PEOPLE_TITLE = "People";
    private static final String GENRES_TITLE = "Genres";
    private static final String ADMINISTRATION_TITLE = "Administration";

    private Repository repository;
    private final LoginDialog loginDialog;

    private User user;

    public MainForm() {
        initComponents();
        initRepository();
        // Open Login Dialog in modal form
        loginDialog = new LoginDialog(this, true);
        loginDialog.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPanel = new javax.swing.JSplitPane();
        tpContent = new javax.swing.JTabbedPane();
        menu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        miSave = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();
        menuSession = new javax.swing.JMenu();
        miLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java Project");
        setPreferredSize(new java.awt.Dimension(1024, 768));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        splitPanel.setDividerLocation(30);
        splitPanel.setDividerSize(0);
        splitPanel.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        tpContent.setPreferredSize(new java.awt.Dimension(1024, 714));
        splitPanel.setBottomComponent(tpContent);

        getContentPane().add(splitPanel);

        menu.setPreferredSize(new java.awt.Dimension(78, 24));

        menuFile.setMnemonic('F');
        menuFile.setText("File");

        miSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        miSave.setText("Save");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        menuFile.add(miSave);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuFile.add(miExit);

        menu.add(menuFile);

        menuSession.setText("Session");

        miLogout.setText("Logout");
        miLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogoutActionPerformed(evt);
            }
        });
        menuSession.add(miLogout);

        menu.add(menuSession);

        setJMenuBar(menu);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        MoviesPanel moviePanel = (MoviesPanel) tpContent.getComponentAt(0);

        try {
            List<Movie> movieList = new ArrayList<>(moviePanel.getMovies());
            if (!movieList.isEmpty()) {
                JAXBUtils.save(new Movies(movieList), "movies.xml");
                MessageUtils.showInformationMessage("Save movies", "Movies saved successfully");
            } else {
                MessageUtils.showInformationMessage("Save movies", "Movie list empty");
            }
        } catch (JAXBException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_miSaveActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        dispose();
    }//GEN-LAST:event_miExitActionPerformed

    private void miLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogoutActionPerformed
        tpContent.removeAll();
        this.setVisible(false);
        new LoginDialog(this, true).setVisible(true);
    }//GEN-LAST:event_miLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuSession;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miLogout;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JSplitPane splitPanel;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void configure() {
        splitPanel.setTopComponent(new UserPanel(user.getUsername()));
        splitPanel.setDividerLocation(30);

        if (user.getRole() == Role.Administrator) {
            tpContent.add(ADMINISTRATION_TITLE, new AdministrationPanel());
            menuFile.remove(miSave);
        } else {
            menuFile.add(miSave);
            menuFile.add(miExit);
            tpContent.add(MOVIES_TITLE, new MoviesPanel());
            tpContent.add(PEOPLE_TITLE, new PeoplePanel());
            tpContent.add(GENRES_TITLE, new GenresPanel());
        }
    }

    // Shows Main Form after successful login
    public void run() {
        configure();
        setVisible(true);
    }

    private void initRepository() {
        try {
            repository = RepositoryFactory.getRepository();
        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Error", "Error loading repository");
            System.exit(-1);
        }
    }

    @Override
    public boolean login(String username, String password) throws Exception {
        Optional<User> optUser = repository.userLogin(username,
                password);
        if (optUser.isPresent()) {
            user = optUser.get();
            return true;
        } else {
            return false;
        }
    }

    @Override
    public boolean register(String username, String password) throws Exception {
        return repository.userCreate(username, password);
    }
}
