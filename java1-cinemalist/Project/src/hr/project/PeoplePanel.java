package hr.project;

import hr.algebra.utils.MessageUtils;
import hr.project.dal.Repository;
import hr.project.dal.RepositoryFactory;
import hr.project.model.Addable;
import hr.project.model.Person;
import java.awt.Dialog;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Goran
 */
public class PeoplePanel extends javax.swing.JPanel implements Addable {

    private static final String ADD_NEW_TITLE = "Add new person";
    private Repository repository;
    private final Set<Person> people = new TreeSet<>();
    private DefaultListModel<Person> peopleModel = new DefaultListModel<>();

    public PeoplePanel() {
        initComponents();
        loadPeople();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEditPerson = new javax.swing.JLabel();
        spPeople = new javax.swing.JScrollPane();
        lsPeople = new javax.swing.JList<>();
        btnNew = new javax.swing.JButton();
        lblPeople = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();
        lblNameError = new javax.swing.JLabel();

        lblEditPerson.setText("Name");

        lsPeople.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lsPeople.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lsPeopleValueChanged(evt);
            }
        });
        spPeople.setViewportView(lsPeople);

        btnNew.setText("New person");
        btnNew.setActionCommand("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        lblPeople.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPeople.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPeople.setText("People");

        tfName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfNameMouseClicked(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete person");
        btnDelete.setActionCommand("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReload.setText("Reload people");
        btnReload.setActionCommand("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        lblNameError.setForeground(java.awt.Color.red);
        lblNameError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(176, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblEditPerson, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfName)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(lblPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(lblEditPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spPeople, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lsPeopleValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lsPeopleValueChanged
        lblNameError.setText("");
        Person person = lsPeople.getSelectedValue();
        if (person != null) {
            tfName.setText(person.getName());
        }
    }//GEN-LAST:event_lsPeopleValueChanged

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed

        new AddNewDialog((JFrame) SwingUtilities.windowForComponent(this),
                Dialog.ModalityType.APPLICATION_MODAL, ADD_NEW_TITLE).setVisible(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (lsPeople.getSelectedValue() != null && isFormValid()) {
            Person person = new Person(lsPeople.getSelectedValue().getId(), tfName.getText().trim());
            if (!people.contains(person)) {
                try {
                    repository.personUpdate(lsPeople.getSelectedValue().getId(), person);
                    people.remove(lsPeople.getSelectedValue());
                    people.add(person);
                    loadPeopleModel();
                } catch (Exception ex) {
                    MessageUtils.showInformationMessage("Error", "Error updating person");
                    Logger.getLogger(PeoplePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            clearForm();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearForm();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Person person = lsPeople.getSelectedValue();
        if (person != null) {
            try {
                repository.personDelete(person.getId());
                people.remove(person);
                loadPeopleModel();
                clearForm();
            } catch (Exception ex) {
                MessageUtils.showInformationMessage("Error", "Error deleting person");
                Logger.getLogger(PeoplePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        people.clear();
        loadPeople();
    }//GEN-LAST:event_btnReloadActionPerformed

    private void tfNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfNameMouseClicked
        lblNameError.setText("");
    }//GEN-LAST:event_tfNameMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReload;
    private javax.swing.JLabel lblEditPerson;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblPeople;
    private javax.swing.JList<Person> lsPeople;
    private javax.swing.JScrollPane spPeople;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables

    private void loadPeople() {
        try {
            repository = RepositoryFactory.getRepository();
            people.addAll(repository.peopleSelectAll());
            loadPeopleModel();
        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Error", "Unable to load people");
        }
    }

    private boolean isFormValid() {
        boolean valid = true;

        if (tfName.getText().trim().isEmpty()) {
            lblNameError.setText("X");
            valid = false;
        } else {
            lblNameError.setText("");
        }

        return valid;
    }

    private void loadPeopleModel() {
        peopleModel.clear();
        people.forEach(peopleModel::addElement);
        lsPeople.setModel(peopleModel);
    }

    private void clearForm() {
        tfName.setText("");
        lblNameError.setText("");
        lsPeople.clearSelection();

        btnNew.requestFocus();
    }

    @Override
    public boolean add(Object o) {
        Person person = new Person((String) o);

        if (!people.contains(person)) {
            try {
                person.setId(repository.personCreate(person));
                people.add(person);
                loadPeopleModel();
                return true;
            } catch (Exception ex) {
                MessageUtils.showInformationMessage("Error", "Error adding person");
                Logger.getLogger(PeoplePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }
}
